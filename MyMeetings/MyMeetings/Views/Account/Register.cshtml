@using System.Runtime.InteropServices
@model MyMeetings.Models.RegisterViewModel
@{
    ViewBag.Title = "Registration";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()
    <h4>Создание нового аккаунта</h4>
    <hr/>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})
        <div class="col-md-10 ">
            @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new {@class = "col-md-2 control-label"})
        <div class="col-md-10 ">
            @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.FirstName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SurName, new {@class = "col-md-2 control-label"})
        <div class="col-md-10 ">
            @Html.TextBoxFor(m => m.SurName, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.SurName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 ">
            @Html.RadioButtonFor(m => m.Gender, "женский")
            <span>женский</span>
            @Html.RadioButtonFor(m => m.Gender, "мужской")
            <span>мужской</span>
            <div>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
     
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.ConfirmPassword)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register"/>
        </div>
    </div>
}
<p class="visible-lg-block">
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/scripts/jquery.unobtrusive-ajax.js")
    @Scripts.Render("~/scripts/jquery-ui-1.12.1.js")
    @Scripts.Render("~/scripts/jquery-ui-1.12.1.min.js")
    @Scripts.Render("~/scripts/commonScripts/testajax.js")
    @Scripts.Render("~/scripts/commonScripts/shared/DatePickerForInputData.js")
    @Styles.Render("~/content/datePicker.css");
    @Styles.Render("~/content/Site.css");
   
}
